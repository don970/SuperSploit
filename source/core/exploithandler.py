import subprocess
import traceback

from .database import DatabaseManagment
from .errors import Error
from .ToStdOut import ToStdout

error = Error
write = ToStdout.write

class ExploitHandler:
    def __init__(self, data):
        types = ["py", "c", "sh"]
        funs = [self.python]
        self.database = DatabaseManagment.get()
        self.term = DatabaseManagment.findTerm()
        Type = self.database["EXPLOIT"].split(".")[1]
        if Type in types:
            funs[types.index(Type)]()
        
    def python(self):
        try:
            write("Starting exploit")
            subprocess.run(["python3", self.database["EXPLOIT"], self.term])
            write("Exploit completed")
        except Exception:
            error(traceback.format_exc())
